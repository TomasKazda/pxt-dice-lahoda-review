{"entries":[{"timestamp":1731358041700,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"dice"],[-1,"-lahoda-review"],[0,"\",\n "]],"start1":19,"start2":19,"length1":22,"length2":8},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":282,"start2":282,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1731358041699,"editorVersion":"7.0.51","text":{"main.ts":"let diceSides: number = 6;\nconst diceMAX: number = 99;\nconst diceMIN: number = 1;\nlet Debounce: boolean = false;\nmusic.play(music.tonePlayable(Note.F4, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone);\n\nfunction showCustomPattern(value: number) {\n    if (value == 1) {\n        basic.showLeds(`\n            . . . . .\n            . . . . .\n            . . # . .\n            . . . . .\n            . . . . .\n        `);\n    } else if (value == 2) {\n        basic.showLeds(`\n            . . . . .\n            . # . . .\n            . . . . .\n            . . . # .\n            . . . . .\n        `);\n    } else if (value == 3) {\n        basic.showLeds(`\n            . . . . .\n            . # . . .\n            . . # . .\n            . . . # .\n            . . . . .\n        `);\n    } else if (value == 4) {\n        basic.showLeds(`\n            . . . . .\n            . # . # .\n            . . . . .\n            . # . # .\n            . . . . .\n        `);\n    } else if (value == 5) {\n        basic.showLeds(`\n            . . . . .\n            . # . # .\n            . . # . .\n            . # . # .\n            . . . . .\n        `);\n    } else if (value == 6) {\n        basic.showLeds(`\n            . . . . .\n            . # . # .\n            . # . # .\n            . # . # .\n            . . . . .\n        `);\n    } else {\n        whaleysans.showNumber(value);\n    }\n}\n\nwhile (true) {\n    if (input.buttonIsPressed(Button.A)) {\n        if (diceSides > diceMIN) {\n            diceSides -= 1;\n        }\n        showCustomPattern(diceSides); \n    }\n\n    if (input.buttonIsPressed(Button.B)) {\n        if (diceSides < 100) {\n            diceSides += 1;\n        }\n\n        if (diceSides <= diceMAX)\n        showCustomPattern(diceSides); else {\n\n            basic.showLeds(`\n            . . . . .\n            . # . # .\n            . . . . .\n            # . . . #\n            . # # # .`);\n\n        }\n\n    }\n\n\n    if (input.isGesture(Gesture.Shake)) {\n        if (Debounce == false) {\n            Debounce = true;\n            let randomNumber = randint(1, diceSides);\n\n            if (diceSides <= 6) {\n                showCustomPattern(randomNumber);\n            }\n\n            if (diceSides > 6) {\n                if (randomNumber != 100) {\n                    whaleysans.showNumber(randomNumber);\n                }\n            }\n\n            if (randomNumber == 100) {\n\n                basic.showLeds(`\n                . . . . .\n                . # . # .\n                . . . . .\n                # . . . #\n                . # # # .`);\n\n                music.play(music.stringPlayable(\"C C5 D B E A F G \", 120), music.PlaybackMode.UntilDone)\n\n            }\n            \n            music.play(music.tonePlayable(Note.C, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone);\n        }\n    }\n\n    if (input.pinIsPressed(TouchPin.P2)) {\n        if (Debounce == true) {\n            Debounce = false;\n            music.play(music.tonePlayable(Note.A, music.beat(BeatFraction.Whole)), music.PlaybackMode.UntilDone);\n        }\n    }\n\n    basic.pause(50);\n}","README.md":"","pxt.json":"{\n    \"name\": \"pxt-dice\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"WhaleySansFont\": \"github:makecode-extensions/whaleysansfont#v1.1.0\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v7.0.51\",\n        \"tag\": \"v7.0.51\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/c3819f016bd720d0eb86efea9a84dcd4fc7b2e1f\",\n        \"target\": \"7.0.51\",\n        \"pxt\": \"11.1.5\"\n    },\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1731358082791}